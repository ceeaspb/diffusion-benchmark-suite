<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="rc-latency-suite" default="perf-suite" basedir=".">
	<property environment="env" />
	<property name="suite.ant.file" value="rc-latency-suite.xml" />
	<property name="client.jvm.args" value="-server -Xms2g -Xmx2g" />
	<property name="client.threads" value="1" />
    <property name="max.time" value="5.0" />
    <property name="max.messages" value="100000" />
	<property name="rc.host" value="dpt://localhost:8080" />
	<import file="perf-test-server-tasks.xml" />
	<!-- Further common settings are available in the test-suite-common file
	-->
	<import file="perf-test-suite-common.xml" />
	
	<target name="before-suite">
		<if>
			<equals arg1="${skip.server}" arg2="true" />
			<then />
			<elseif>
				<equals arg1="${diffusion.host}" arg2="localhost" />
				<then>
					<assert-no-diffusion-running />
					<clean-diffusion />
					<dar publisher.name="RemoteControl" />
                    <deploy-dar dar.name="RemoteControl.dar" />
				</then>
			</elseif>
			<else>
				<sshexec host="${diffusion.host}" username="${ssh.username}" password="${ssh.password}" command="cd benchmark-server;ant -f ${suite.ant.file} before" />
			</else>
		</if>
	</target>
	
	<target name="after-suite">
        <if>
            <equals arg1="${skip.server}" arg2="true" />
            <then />
            <elseif>
                <equals arg1="${diffusion.host}" arg2="localhost" />
                <then>
                    <delete file="RemoteControl.dar" />
                </then>
            </elseif>
            <else>
                <sshexec host="${diffusion.host}" username="${ssh.username}" password="${ssh.password}" command="cd benchmark-server;ant -f ${suite.ant.file} before" />
            </else>
        </if>
    </target>
	
	<target name="before">
        <if>
            <equals arg1="${skip.server}" arg2="true" />
            <then />
            <elseif>
                <equals arg1="${diffusion.host}" arg2="localhost" />
                <then>
                    <assert-no-diffusion-running />
                    <start-diffusion />
                </then>
            </elseif>
            <else>
                <sshexec host="${diffusion.host}" username="${ssh.username}" password="${ssh.password}" command="cd benchmark-server;ant -f ${suite.ant.file} before" />
            </else>
        </if>
    </target>
	
    <target name="perfTest-1000b-rc-ping-latency">
        <run-rc-ping-test test.name="1000b-rc-ping-latency" message.size="1000" />
    </target>
    <target name="perfTest-2000b-rc-ping-latency">
        <run-rc-ping-test test.name="2000b-rc-ping-latency" message.size="2000" />
    </target>
    <target name="perfTest-500b-rc-ping-latency">
        <run-rc-ping-test test.name="500b-rc-ping-latency" message.size="500" />
    </target>
    <target name="perfTest-250b-rc-ping-latency">
        <run-rc-ping-test test.name="250b-rc-ping-latency" message.size="250" />
    </target>
    <target name="perfTest-250b-rc-ping-throughput">
        <run-rc-ping-test test.name="250b-rc-ping-latency" message.size="250"  />
    </target>
    <target name="perfTest-125b-rc-ping-latency">
        <run-rc-ping-test test.name="125b-rc-ping-latency" message.size="125" />
    </target>

    <macrodef name="run-rc-ping-test">
        <!-- Client attributes -->
        <attribute name="initial.clients" default="0" />
        <attribute name="max.clients" default="1" />
        <attribute name="message.size" default="10" />
        <attribute name="test.name" />
        <sequential>
            <!-- Start Client -->
            <var name="full-test-name" value="@{test.name}-${diffusion.protocol}"/>
            <if>
             <equals arg1="${skip.client}" arg2="true" />
                <then><input>Press Return key to continue...</input></then>
                <else>
                    <if>
                        <available file="${full-test-name}.settings"/>
                        <then>
                            <echo message="Using existing settings file: ${full-test-name}.settings"/>
                        </then>
                        <else>
                            <echo file="${full-test-name}.settings">
#Client settings:
initial.clients=@{initial.clients}
max.clients=@{max.clients}
clients.increment=@{clients.increment}
client.create.pause.seconds=@{client.create.pause.seconds}
inbound.threadpool.size=${client.threads}
client.jvm.args=${client.jvm.args}
diffusion.url=${diffusion.url}
local.interfaces=${diffusion.client.nics}
experiment.output=${full-test-name}.csv
clients.output=${full-test-name}-clients.log
max.test.time.minutes=${max.time}
max.test.messages=${max.messages}
                            </echo>
                        </else>
                    </if>
                    <echo message="...Starting test client..."/>
                    <java classname="experiments.ExperimentRunner" fork="true" 
                          failonerror="true" jvmargs="${client.jvm.args}">
                        <sysproperty key="log.connection.exception" value="false" />
                        <arg value="experiments.RemoteControlPingLatencyExperiment"/>
                        <arg value="${full-test-name}.settings"/>
                        <classpath refid="test.runtime.classpath" />
                    </java>
                    <echo message="...Test client finished..."/>
                </else>
            </if>           
        </sequential>
    </macrodef>
	<target name="start-injector">
		<dar publisher.name="RemoteControl" />
		<deploy-dar dar.name="RemoteControl.dar" />
	</target>
	<target name="stop-injector">
		<undeploy-dar dar.name="RemoteControl.dar" />
		<delete file="RemoteControl.dar" />
	</target>
</project>
