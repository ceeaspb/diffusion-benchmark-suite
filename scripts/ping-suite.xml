<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="ping-suite" default="perf-suite" basedir=".">
	<property environment="env"/>
    <property name="client.jvm.args" value="-server -Xms2g -Xmx2g"/>
    <property name="client.threads" value="1"/>
    <property name="max.messages" value="1000000"/>
    <property name="max.time" value="3.0"/>
    <property name="suite.ant.file" value="latency-suite.xml"/>
	<import file="perf-test-server-tasks.xml" />
	<import file="perf-test-suite-common.xml" />
	<!-- before/after are empty as we want the server up for duration of suite -->
	<target name="before" />
	<target name="after" />
	<target name="before-suite">
		<if>
		    <equals arg1="${skip.server}" arg2="true" /><then/>
            <elseif>
            	<equals arg1="${diffusion.host}" arg2="localhost" />
			<then>
				<assert-no-diffusion-running />
				<clean-diffusion />
				<antcall target="start-echo"/>
				<start-diffusion />
			</then>
        	</elseif>
			<else>
				<sshexec host="${diffusion.host}" username="${ssh.username}" password="${ssh.password}" command="cd benchmark-server;ant -f ping-suite.xml before-suite" />
			</else>
		</if>
	</target>
	<target name="after-suite">
        <if>
            <equals arg1="${skip.server}" arg2="true" /><then/>
            <elseif>
			<equals arg1="${diffusion.host}" arg2="localhost" />
			<then>
				<kill-diffusion />
			</then>
        	</elseif>
			<else>
				<sshexec host="${diffusion.host}" username="${ssh.username}" password="${ssh.password}" command="cd benchmark-server;ant -f ping-suite.xml after-suite" />
			</else>
		</if>
	</target>
	<target name="perfTest-1000b-ping-latency">
        <run-ping-test test.name="1000b-ping-latency" message.size="1000" />
	</target>
    <target name="perfTest-2000b-ping-latency">
        <run-ping-test test.name="2000b-ping-latency" message.size="2000" />
    </target>
    <target name="perfTest-500b-ping-latency">
        <run-ping-test test.name="500b-ping-latency" message.size="500" />
    </target>
    <target name="perfTest-250b-ping-latency">
        <run-ping-test test.name="250b-ping-latency" message.size="250" />
    </target>
    <target name="perfTest-250b-ping-throughput">
        <run-ping-test test.name="250b-ping-latency" message.size="250"  />
    </target>
	<target name="perfTest-125b-ping-latency">
        <run-ping-test test.name="125b-ping-latency" message.size="125" />
	</target>

	<macrodef name="run-ping-test">
		<!-- Client attributes -->
		<attribute name="client.jvm.memory" default="8g" />
		<attribute name="initial.clients" default="1" />
		<attribute name="max.clients" default="1" />
		<attribute name="client.create.pause.seconds" default="1.0" />
		<attribute name="message.size" default="10" />
		<attribute name="max.test.time.minutes" default="5.0" />
		<attribute name="test.name" />
		<sequential>
			<!-- Start Client -->
			<var name="full-test-name" value="@{test.name}-${diffusion.protocol}"/>
            <if>
             <equals arg1="${skip.client}" arg2="true" />
                <then><input>Press Return key to continue...</input></then>
                <else>
                    <if>
                        <available file="${full-test-name}.settings"/>
                        <then>
                            <echo message="Using existing settings file: ${full-test-name}.settings"/>
                        </then>
                        <else>
                            <echo file="${full-test-name}.settings">
#Client settings:
initial.clients=@{initial.clients}
max.clients=@{max.clients}
clients.increment=@{clients.increment}
client.create.pause.seconds=@{client.create.pause.seconds}
client.increment.pause.seconds=@{client.increment.pause.seconds}
inbound.threadpool.size=${client.threads}
client.jvm.args=${client.jvm.args}
diffusion.url=${diffusion.url}
local.interfaces=${diffusion.client.nics}
experiment.output=${full-test-name}.csv
clients.output=${full-test-name}-clients.log
max.test.time.minutes=${max.time}
max.test.messages=${max.messages}
                            </echo>
                        </else>
                    </if>
                    <echo message="...Starting test client..."/>
                    <java classname="experiments.ExperimentRunner" fork="true" 
                          failonerror="true" jvmargs="${client.jvm.args}">
                        <sysproperty key="log.connection.exception" value="false" />
                        <arg value="experiments.PingLatencyExperiment"/>
                        <arg value="${full-test-name}.settings"/>
                        <classpath refid="test.runtime.classpath" />
                    </java>
                    <echo message="...Test client finished..."/>
                </else>
            </if>           
		</sequential>
	</macrodef>
	<target name="start-echo">
		<dar publisher.name="Ping" />
		<deploy-dar dar.name="Ping.dar" />
	</target>
	<target name="stop-echo">
		<undeploy-dar dar.name="Ping.dar" />
		<delete file="Ping.dar" />
	</target>
</project>
